{
  "id": "https://schema.management.azure.com/schemas/2018-09-15-preview/Microsoft.EventGrid.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.EventGrid",
  "description": "Microsoft EventGrid Resource Types",
  "resourceDefinitions": {
    "domains": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the domain"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-15-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Domain"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.EventGrid/domains"
    },
    "topics": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the topic"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/topics"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-15-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Topic"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.EventGrid/topics"
    }
  },
  "unknown_resourceDefinitions": {
    "eventSubscriptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the event subscription"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/eventSubscriptions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-15-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Subscription"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.EventGrid/eventSubscriptions"
    }
  },
  "definitions": {
    "AdvancedFilter": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/NumberInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberNotInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberLessThanAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberGreaterThanAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberLessThanOrEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberGreaterThanOrEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/BoolEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringNotInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringBeginsWithAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringEndsWithAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringContainsAdvancedFilter"
        }
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "The filter key. Represents an event property with up to two levels of nesting."
        }
      },
      "description": "Represents an advanced filter that can be used to filter events based on various event envelope/data fields."
    },
    "BoolEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The filter value"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "BoolEquals"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "BoolEquals Filter"
    },
    "DeadLetterDestination": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/StorageBlobDeadLetterDestination"
        }
      ],
      "properties": {},
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
    },
    "DomainProperties": {
      "type": "object",
      "properties": {
        "inputSchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventV01Schema"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This determines the format that Event Grid should expect for incoming events published to the domain."
        },
        "inputSchemaMapping": {
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
        }
      },
      "description": "Properties of the Domain"
    },
    "EventHubEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The properties for a event hub destination."
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "EventHub"
          ]
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the event hub destination for an event subscription"
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription."
        }
      },
      "description": "The properties for a event hub destination."
    },
    "EventSubscriptionDestination": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/WebHookEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/EventHubEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/StorageQueueEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/HybridConnectionEventSubscriptionDestination"
        }
      ],
      "properties": {},
      "description": "Information about the destination for an event subscription"
    },
    "EventSubscriptionFilter": {
      "type": "object",
      "properties": {
        "subjectBeginsWith": {
          "type": "string",
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events. \r\nWildcard characters are not supported in this path."
        },
        "subjectEndsWith": {
          "type": "string",
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path."
        },
        "includedEventTypes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "A list of applicable event types that need to be part of the event subscription. \r\nIf it is desired to subscribe to all event types, the string \"all\" needs to be specified as an element in this list."
        },
        "isSubjectCaseSensitive": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter \r\nshould be compared in a case sensitive manner."
        },
        "advancedFilters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "A list of advanced filters."
        }
      },
      "description": "Filter for the Event Subscription"
    },
    "EventSubscriptionProperties": {
      "type": "object",
      "properties": {
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Information about the destination for an event subscription"
        },
        "filter": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Filter for the Event Subscription"
        },
        "labels": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "List of user defined labels."
        },
        "expirationTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of the event subscription."
        },
        "eventDeliverySchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CloudEventV01Schema",
                "CustomInputSchema"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The event delivery schema for the event subscription."
        },
        "retryPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Information about the retry policy for an event subscription"
        },
        "deadLetterDestination": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
        }
      },
      "description": "Properties of the Event Subscription"
    },
    "HybridConnectionEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The properties for a hybrid connection destination."
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "HybridConnection"
          ]
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the HybridConnection destination for an event subscription."
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription."
        }
      },
      "description": "The properties for a hybrid connection destination."
    },
    "InputSchemaMapping": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/JsonInputSchemaMapping"
        }
      ],
      "properties": {},
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
    },
    "JsonField": {
      "type": "object",
      "properties": {
        "sourceField": {
          "type": "string",
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping."
        }
      },
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id','topic' and 'eventTime' properties. This represents a field in the input event schema."
    },
    "JsonFieldWithDefault": {
      "type": "object",
      "properties": {
        "sourceField": {
          "type": "string",
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping."
        },
        "defaultValue": {
          "type": "string",
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload."
        }
      },
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'subject','eventType' and 'dataVersion' properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided."
    },
    "JsonInputSchemaMapping": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonInputSchemaMappingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema."
        },
        "inputSchemaMappingType": {
          "type": "string",
          "enum": [
            "Json"
          ]
        }
      },
      "required": [
        "inputSchemaMappingType"
      ],
      "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema."
    },
    "JsonInputSchemaMappingProperties": {
      "type": "object",
      "properties": {
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id','topic' and 'eventTime' properties. This represents a field in the input event schema."
        },
        "topic": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id','topic' and 'eventTime' properties. This represents a field in the input event schema."
        },
        "eventTime": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id','topic' and 'eventTime' properties. This represents a field in the input event schema."
        },
        "eventType": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'subject','eventType' and 'dataVersion' properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided."
        },
        "subject": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'subject','eventType' and 'dataVersion' properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided."
        },
        "dataVersion": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'subject','eventType' and 'dataVersion' properties. This represents a field in the input event schema along with a default value to be used, and at least one of these two properties should be provided."
        }
      },
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema."
    },
    "NumberGreaterThanAdvancedFilter": {
      "type": "object",
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The filter value"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberGreaterThan"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberGreaterThan Filter"
    },
    "NumberGreaterThanOrEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The filter value"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberGreaterThanOrEquals"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberGreaterThanOrEquals Filter"
    },
    "NumberInAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberIn"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberIn filter"
    },
    "NumberLessThanAdvancedFilter": {
      "type": "object",
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The filter value"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberLessThan"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberLessThan Filter"
    },
    "NumberLessThanOrEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The filter value"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberLessThanOrEquals"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberLessThanOrEquals Filter"
    },
    "NumberNotInAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberNotIn"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberNotIn Filter"
    },
    "RetryPolicy": {
      "type": "object",
      "properties": {
        "maxDeliveryAttempts": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Maximum number of delivery retry attempts for events."
        },
        "eventTimeToLiveInMinutes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Time To Live (in minutes) for events."
        }
      },
      "description": "Information about the retry policy for an event subscription"
    },
    "StorageBlobDeadLetterDestination": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the storage blob based dead letter destination."
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "StorageBlob"
          ]
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the storage blob based dead letter destination."
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events"
        },
        "blobContainerName": {
          "type": "string",
          "description": "The name of the Storage blob container that is the destination of the deadletter events"
        }
      },
      "description": "Properties of the storage blob based dead letter destination."
    },
    "StorageQueueEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The properties for a storage queue destination."
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "StorageQueue"
          ]
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the storage queue destination for an event subscription."
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription."
        },
        "queueName": {
          "type": "string",
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription."
        }
      },
      "description": "The properties for a storage queue destination."
    },
    "StringBeginsWithAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "StringBeginsWith"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringBeginsWith Filter"
    },
    "StringContainsAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "StringContains"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringContains Filter"
    },
    "StringEndsWithAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "StringEndsWith"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringEndsWith Filter"
    },
    "StringInAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "StringIn"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringIn Filter"
    },
    "StringNotInAdvancedFilter": {
      "type": "object",
      "properties": {
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values"
        },
        "operatorType": {
          "type": "string",
          "enum": [
            "StringNotIn"
          ]
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringNotIn Filter"
    },
    "TopicProperties": {
      "type": "object",
      "properties": {
        "inputSchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventV01Schema"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic."
        },
        "inputSchemaMapping": {
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
        }
      },
      "description": "Properties of the Topic"
    },
    "WebHookEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Information about the webhook destination properties for an event subscription."
        },
        "endpointType": {
          "type": "string",
          "enum": [
            "WebHook"
          ]
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the webhook destination for an event subscription"
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "endpointUrl": {
          "type": "string",
          "description": "The URL that represents the endpoint of the destination of an event subscription."
        }
      },
      "description": "Information about the webhook destination properties for an event subscription."
    }
  }
}
